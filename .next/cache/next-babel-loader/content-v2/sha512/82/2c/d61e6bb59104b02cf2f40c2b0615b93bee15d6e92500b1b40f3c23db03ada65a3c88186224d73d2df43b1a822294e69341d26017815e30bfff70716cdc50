{"ast":null,"code":"import { apiCall } from '../api/api';\nimport { CHANGE_SEARCHFIELD, REQUEST_ROBOTS_PENDING, REQUEST_ROBOTS_SUCCESS, REQUEST_ROBOTS_FAILED } from './constants';\nexport var setSearchField = function setSearchField(text) {\n  return {\n    type: CHANGE_SEARCHFIELD,\n    payload: text\n  };\n};\nexport var requestRobots = function requestRobots() {\n  return function (dispatch) {\n    dispatch({\n      type: REQUEST_ROBOTS_PENDING\n    });\n    apiCall('https://jsonplaceholder.typicode.com/users').then(function (data) {\n      return dispatch({\n        type: REQUEST_ROBOTS_SUCCESS,\n        payload: data\n      });\n    })[\"catch\"](function (error) {\n      return dispatch({\n        type: REQUEST_ROBOTS_FAILED,\n        payload: error\n      });\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/rvrus/GoogleDrive/Source/ZTM/Junior/ssr-robofriends/redux/actions.js"],"names":["apiCall","CHANGE_SEARCHFIELD","REQUEST_ROBOTS_PENDING","REQUEST_ROBOTS_SUCCESS","REQUEST_ROBOTS_FAILED","setSearchField","text","type","payload","requestRobots","dispatch","then","data","error"],"mappings":"AAAA,SAASA,OAAT,QAAwB,YAAxB;AACA,SACEC,kBADF,EAEEC,sBAFF,EAGEC,sBAHF,EAIEC,qBAJF,QAKO,aALP;AAOA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,IAAD;AAAA,SAAW;AACvCC,IAAAA,IAAI,EAAEN,kBADiC;AAEvCO,IAAAA,OAAO,EAAEF;AAF8B,GAAX;AAAA,CAAvB;AAKP,OAAO,IAAMG,aAAa,GAAG,SAAhBA,aAAgB;AAAA,SAAM,UAACC,QAAD,EAAc;AAC/CA,IAAAA,QAAQ,CAAC;AAAEH,MAAAA,IAAI,EAAEL;AAAR,KAAD,CAAR;AACAF,IAAAA,OAAO,CAAC,4CAAD,CAAP,CACGW,IADH,CACQ,UAACC,IAAD;AAAA,aAAUF,QAAQ,CAAC;AAAEH,QAAAA,IAAI,EAAEJ,sBAAR;AAAgCK,QAAAA,OAAO,EAAEI;AAAzC,OAAD,CAAlB;AAAA,KADR,WAES,UAACC,KAAD;AAAA,aACLH,QAAQ,CAAC;AAAEH,QAAAA,IAAI,EAAEH,qBAAR;AAA+BI,QAAAA,OAAO,EAAEK;AAAxC,OAAD,CADH;AAAA,KAFT;AAKD,GAP4B;AAAA,CAAtB","sourcesContent":["import { apiCall } from '../api/api';\r\nimport {\r\n  CHANGE_SEARCHFIELD,\r\n  REQUEST_ROBOTS_PENDING,\r\n  REQUEST_ROBOTS_SUCCESS,\r\n  REQUEST_ROBOTS_FAILED,\r\n} from './constants';\r\n\r\nexport const setSearchField = (text) => ({\r\n  type: CHANGE_SEARCHFIELD,\r\n  payload: text,\r\n});\r\n\r\nexport const requestRobots = () => (dispatch) => {\r\n  dispatch({ type: REQUEST_ROBOTS_PENDING });\r\n  apiCall('https://jsonplaceholder.typicode.com/users')\r\n    .then((data) => dispatch({ type: REQUEST_ROBOTS_SUCCESS, payload: data }))\r\n    .catch((error) =>\r\n      dispatch({ type: REQUEST_ROBOTS_FAILED, payload: error })\r\n    );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}